{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Executable Spec V2",
  "type": "object",
  "required": [
    "main_function",
    "helper_functions",
    "types",
    "pre",
    "post",
    "invariants",
    "examples",
    "metamorphic_relations",
    "forbidden_apis",
    "complexity_guarantee",
    "oracle",
    "design_notes",
    "spec_version"
  ],
  "additionalProperties": false,
  "properties": {
    "spec_version": { "const": 2 },
    "design_notes": { "type": "string" },
    "main_function": {
      "type": "object",
      "required": ["name", "purpose", "signature", "exceptions", "complexity"],
      "additionalProperties": false,
      "properties": {
        "name": { "type": "string", "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$" },
        "purpose": { "type": "string" },
        "complexity": { "type": "string" },
        "signature": {
          "type": "object",
            "required": ["parameters", "return_type", "return_description"],
            "additionalProperties": false,
            "properties": {
              "parameters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type", "description"],
                  "additionalProperties": false,
                  "properties": {
                    "name": { "type": "string", "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$" },
                    "type": { "type": "string" },
                    "description": { "type": "string" },
                    "constraints": { "type": "string" }
                  }
                }
              },
              "return_type": { "type": "string" },
              "return_description": { "type": "string" }
            }
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["type", "condition"],
            "additionalProperties": false,
            "properties": {
              "type": { "type": "string" },
              "condition": { "type": "string" }
            }
          }
        }
      }
    },
    "helper_functions": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "purpose", "signature", "exceptions"],
        "additionalProperties": false,
        "properties": {
          "name": { "type": "string", "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$" },
          "purpose": { "type": "string" },
          "signature": {
            "type": "object",
            "required": ["parameters", "return_type", "return_description"],
            "additionalProperties": false,
            "properties": {
              "parameters": { "$ref": "#/properties/main_function/properties/signature/properties/parameters" },
              "return_type": { "type": "string" },
              "return_description": { "type": "string" }
            }
          },
          "exceptions": { "$ref": "#/properties/main_function/properties/exceptions" }
        }
      }
    },
    "types": {
      "type": "object",
      "required": ["parameters", "returns", "exceptions"],
      "additionalProperties": false,
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "type"],
            "additionalProperties": false,
            "properties": {
              "name": { "type": "string", "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$" },
              "type": { "type": "string" },
              "description": { "type": "string" },
              "nullable": { "type": "boolean" },
              "union": { "type": "array", "items": { "type": "string" } }
            }
          }
        },
        "returns": {
          "type": "object",
          "required": ["name", "type"],
          "additionalProperties": false,
          "properties": {
            "name": { "type": "string" },
            "type": { "type": "string" },
            "description": { "type": "string" },
            "nullable": { "type": "boolean" },
            "union": { "type": "array", "items": { "type": "string" } }
          }
        },
        "exceptions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["type", "predicate"],
            "additionalProperties": false,
            "properties": {
              "type": { "type": "string" },
              "predicate": { "type": "string" },
              "message": { "type": "string" }
            }
          }
        }
      }
    },
    "pre": {
      "type": "array",
      "items": { "$ref": "#/definitions/predicateP" },
      "minItems": 1
    },
    "post": {
      "type": "array",
      "items": { "$ref": "#/definitions/predicateQ" },
      "minItems": 1
    },
    "invariants": {
      "type": "array",
      "items": { "$ref": "#/definitions/predicateI" }
    },
    "examples": {
      "type": "object",
      "required": ["positive", "negative"],
      "additionalProperties": false,
      "properties": {
        "positive": {
          "type": "array",
          "items": { "$ref": "#/definitions/examplePos" }
        },
        "negative": {
          "type": "array",
          "items": { "$ref": "#/definitions/exampleNeg" }
        }
      }
    },
    "metamorphic_relations": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "transform_inputs", "relation"],
        "additionalProperties": false,
        "properties": {
          "id": { "type": "string", "pattern": "^MR_?\d+$" },
          "transform_inputs": { "type": "string" },
          "relation": { "type": "string", "enum": ["equal", "subset", "permutation", "length_non_decreasing", "custom"] },
          "oracle_expr": { "type": "string" },
          "notes": { "type": "string" }
        }
      }
    },
    "forbidden_apis": {
      "type": "array",
      "items": { "type": "string", "pattern": "^[A-Za-z_][A-Za-z0-9_]*(\.[A-Za-z_][A-Za-z0-9_]*)*$" }
    },
    "complexity_guarantee": {
      "type": ["object", "null"],
      "required": ["big_o"],
      "additionalProperties": false,
      "properties": {
        "big_o": { "type": "string", "pattern": "^O\\([^()]+\\)$" },
        "witness_rules": { "type": "array", "items": { "type": "string" } }
      }
    },
    "oracle": {
      "type": ["object", "null"],
      "required": ["type"],
      "additionalProperties": false,
      "properties": {
        "type": { "type": "string", "enum": ["reference_impl", "assertion_bundle", "inline", ""] },
        "ref": { "type": ["string", "null"] },
        "code": { "type": ["string", "null"] }
      }
    }
  },
  "definitions": {
    "predicateP": {
      "type": "object",
      "required": ["id", "expr"],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "pattern": "^P\\d+$" },
        "expr": { "type": "string" },
        "message": { "type": "string" }
      }
    },
    "predicateQ": {
      "type": "object",
      "required": ["id", "expr"],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "pattern": "^Q\\d+$" },
        "expr": { "type": "string" },
        "message": { "type": "string" }
      }
    },
    "predicateI": {
      "type": "object",
      "required": ["id", "expr"],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "pattern": "^I\\d+$" },
        "expr": { "type": "string" },
        "message": { "type": "string" }
      }
    },
    "examplePos": {
      "type": "object",
      "required": ["id", "inputs"],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "pattern": "^EX_POS_\\d+$" },
        "inputs": { "type": "object" },
        "output": {},
        "tags": { "type": "array", "items": { "type": "string" } },
        "notes": { "type": "string" }
      }
    },
    "exampleNeg": {
      "type": "object",
      "required": ["id", "inputs", "raises"],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "pattern": "^EX_NEG_\\d+$" },
        "inputs": { "type": "object" },
        "raises": { "type": "string" },
        "tags": { "type": "array", "items": { "type": "string" } },
        "notes": { "type": "string" }
      }
    }
  }
}